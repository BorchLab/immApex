// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// symmetric_deletion_lookup_cpp
IntegerMatrix symmetric_deletion_lookup_cpp(std::vector<std::string> sequences, int threshold);
RcppExport SEXP _immApex_symmetric_deletion_lookup_cpp(SEXP sequencesSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(symmetric_deletion_lookup_cpp(sequences, threshold));
    return rcpp_result_gen;
END_RCPP
}
// edit_distance_threshold
int edit_distance_threshold(std::string a, std::string b, int threshold);
RcppExport SEXP _immApex_edit_distance_threshold(SEXP aSEXP, SEXP bSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type a(aSEXP);
    Rcpp::traits::input_parameter< std::string >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(edit_distance_threshold(a, b, threshold));
    return rcpp_result_gen;
END_RCPP
}
// post_filter_candidates
DataFrame post_filter_candidates(const IntegerMatrix& candidatePairs, const std::vector<std::string>& sequences, const std::vector<std::string>& vGenes, const std::vector<std::string>& jGenes, int threshold, bool filterV, bool filterJ);
RcppExport SEXP _immApex_post_filter_candidates(SEXP candidatePairsSEXP, SEXP sequencesSEXP, SEXP vGenesSEXP, SEXP jGenesSEXP, SEXP thresholdSEXP, SEXP filterVSEXP, SEXP filterJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type candidatePairs(candidatePairsSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type vGenes(vGenesSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type jGenes(jGenesSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< bool >::type filterV(filterVSEXP);
    Rcpp::traits::input_parameter< bool >::type filterJ(filterJSEXP);
    rcpp_result_gen = Rcpp::wrap(post_filter_candidates(candidatePairs, sequences, vGenes, jGenes, threshold, filterV, filterJ));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_immApex_symmetric_deletion_lookup_cpp", (DL_FUNC) &_immApex_symmetric_deletion_lookup_cpp, 2},
    {"_immApex_edit_distance_threshold", (DL_FUNC) &_immApex_edit_distance_threshold, 3},
    {"_immApex_post_filter_candidates", (DL_FUNC) &_immApex_post_filter_candidates, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_immApex(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
